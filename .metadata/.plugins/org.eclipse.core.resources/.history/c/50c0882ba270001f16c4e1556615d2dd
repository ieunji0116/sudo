<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
      http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

   <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
   
   <!-- Enables the Spring MVC @Controller programming model -->
   <annotation-driven />

   <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
   <resources mapping="/resources/**" location="/resources/" />

   <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
   <!-- 컨트롤러가 리턴하는 뷰 파일명을 받아서, /WEB-INF/views/리턴받은파일명.jsp 
   해당 위치에 있는 파일을 찾아서 클라이언트에게 내보내는 일을 함 -->
   <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
      <beans:property name="prefix" value="/WEB-INF/views/" />
      <beans:property name="suffix" value=".jsp" />
   </beans:bean>
   
   <context:component-scan base-package="org.myweb.first" />
   <!-- 실행 흐름 
   1. 브라우저에서 클라이언트가 요청을 보냄 (버튼 클릭 등)
   2. 웹서버의 서버엔진(톰캣) 위에서 구동되고 있는 어플리케이션의 web.xml 로 전송옴
   3. web.xml 에서는 *.do 로 오는 요청은 스프링이 제공하는 DispatcherServlet 클래스로 전달함
   4. 디스패처서블렛은 초기설정 파라매터에 지정한 내용대로 동작이 됨
      4-1. component-scan 에 설정된 패키지 아래에서 요청온 *.do 의 매핑이름을 찾는다.
         *.do 는 스프링에서 Controller 클래스 안의 메소드에 설정하도록 되어 있음
      4-2. 매핑이름이 설정된 컨트롤러 클래스 안의 메소드를 찾아서 실행함 (요청값도 전달이 됨 => 메소드 매개변수가 받음)
          즉, 컨트롤러의 메소드 하나가 서블릿기반의 서블릿클래스 하나임
      4-3. 서비스 -> dao 로 보내서 쿼리 실행후 결과 리턴
      4-4. 모델에서 받은 결과를 request 나 session 에 저장 처리함
      4-5. 내보낼 뷰 파일명(String)을 리턴함
   5. 컨트롤러 메소드에서 리턴된 뷰 파일명을 설정된 뷰 리졸버가 받음
      뷰 리졸버는 설정된 폴더 아래서에서 JSP 파일을 찾아서 내보냄
   -->
   
   
   <!-- 작성된 클래스 등록은 어노테이션을 이용해서 자동 등록 처리함 -->
<!--    <beans:bean
   	class="org.myweb.first.member.controller.MemberController">
   </beans:bean> -->
</beans:beans>
